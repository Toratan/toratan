<?php
    $title = "Your note's title here ...";
    $body = "Your note's body here ...";
    if($this->edit)
    {
        $title = $this->values['note_title'];
        $body = $this->values['note_body'];
        $note_id = $this->values['note_id'];
    }
?>
<script src="/access/js/shortcut.js"></script>
<script src="/access/rte/tinymce/tinymce.min.js"></script>
<script type="text/javascript">
        $( document ).ready( function() {
            var height = $(window).height() - 310;
            if(height < 420)
                height = 420;
            tinymce.init({
                selector: "textarea",
                height : height,
                plugins: [
                    "advlist autolink lists link image charmap print preview anchor",
                    "searchreplace visualblocks code fullscreen",
                    "insertdatetime media table contextmenu paste"
                ],
                toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
                toolbar1: "newdocument fullpage | cut copy paste | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | styleselect formatselect fontselect fontsizeselect",
                toolbar2: "searchreplace | bullist numlist | outdent indent blockquote | undo redo | link unlink anchor image media code | inserttime preview | forecolor backcolor | table | hr removeformat | subscript superscript | charmap emoticons | print fullscreen | ltr rtl | spellchecker",
                 setup: function(ed) {
                     // the editor save function
                     ed.addShortcut("ctrl+s", "Save", save);
                     // the window save function
                    shortcut.add("Ctrl+S", save);
                 }
            });
            $(window).bind('beforeunload', function(e){
                if(anything_changed())
                    return "Changes are not saved!";
            });
            $("a#switch-editor").click(function(e) {
                e.preventDefault();
                var $this = $(this);
<?php if($this->edit) : ?>
                window.open_yesnoModal(
                        "<b>Switching between editors can cause incompatibility issues, and can cause note's pure text seem agly, and might make note development harder.<br /> Are you sure do you want to change the editor?</b>", 
                        function() {
<?php endif; ?>
                            var href = String($this.attr('href')).substr(1); // remove first `#` char.
                            if(false && !anything_changed()) { window.location = href; return;}
                            $("form[name='note']")
                                    .append('<input type="hidden" name="submit-type" value="change-editor" />')
                                    .append('<input type="hidden" name="pid" value="<?php echo $this->pid ?>" />')
                                    .attr('action', href);
                            save(true);
<?php if($this->edit) : ?>
                        }, undefined, false);
<?php endif; ?>
            });
            $("a.note-discard").click(function(e) {
                e.preventDefault();
                var href = $(this).attr('href');
                var yes_func =function() {
                    $(window).unbind("beforeunload");
                    window.location = href;
                };
                if(!anything_changed()) {
                    yes_func();
                    return;
                }
                window.open_yesnoModal("Changes <b>are not</b> saved, are you sure to <b>discard</b>?", yes_func, undefined, false);
            });
        } );
        function anything_changed() {
            if("<?php echo  str_replace('"', "&quot;", $title) ?>" !== String($("#editor-title").val()).replace(/"/ig, "&quot;")) return true;
            return <?php echo @$this->is_using_buffer? "true || " : ""  ?>tinymce.get('editor').isDirty();
        }
        function save(force_save) {
            $(window).unbind('beforeunload');
            if(typeof(force_save) === "undefined") force_save = false;
<?php if(strtolower($this->request->action->name) != "new") : ?>
            if(!(force_save || anything_changed())) {
                $("a.note-discard").click();
                return;
            }
<?php endif; ?>
            $("form[name='note']").submit();
        }
</script>
<style type="text/css">
    #editor-container {margin-top: 10px;margin-bottom: 10px;}
    .mce-panel { border: 1px solid #e6e6e6!important;}
</style>
<!-- ckeditor placeholder -->
<div id="editor-container" class="container">
    <form action="<?php echo $this->request->getURI(); ?>" method="POST" name='note'>
        <input type="hidden" name="version" value="html" />
    <?php if($this->edit) : ?>
        <input type="hidden" name="note_id" value="<?php echo $note_id ?>" />
    <?php endif; ?>
        <div id="editor-parent">
            <ol class="breadcrumb">
                <?php $count = 0; foreach($this->route as $folder) : $active = count($this->route) == ++$count; ?>
                    <li <?php echo $active?"class='active'":""?>><?php echo !$active?"<a href='/#!/d/{$folder->folder_id}.folders'>":"", $folder->folder_title, !$active?"</a>":""?></li>
                <?php endforeach;unset($count);?>
            </ol>
            <div class="input-group pull-left" style="margin-top: -10px;">
                <input type="text" name="note_title"  id="editor-title" class="block input form-control" placeholder="Your note's title" value="<?php echo str_replace('"', "&quot;", $title) ?>" autofocus="" maxlength="300"/>
                <span class="input-group-btn">
                    <button onclick="save();" type="button" class="btn btn-default" style="border-bottom-left-radius: 0;border-top-left-radius: 0;" tabindex="-1" title="Save">
                        <span class="glyphicon glyphicon-hdd"></span>
                    </button>
                    <a href="<?php echo $this->edit && $note_id ? "/view/note/$note_id" : "/#!/d/{$this->pid}.notes" ?>" title="Discard" class="note-discard btn btn-warning" tabindex="-1" style="margin-left:10px;"><span class="glyphicon glyphicon-trash"></span></a>
                </span>
                <div class="pull-right">
                    <div class="input-group inline" style="">
                        <div class="btn-group">
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" tabindex="-1">
                              <span class="glyphicon glyphicon-cog"></span>  <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu pull-right" role="menu">
                                <li class="divider hidden"></li>
                                <li title="Change to Ace editor"><a href="#/editor/change/to/ace?continue=<?php echo urlencode($this->request->getURI()); ?>" id="switch-editor"><span class="glyphicon glyphicon-credit-card"></span> Ace editor</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix" style="margin: 10px;"></div>
            <!--<textarea name="content" style="width:100%"></textarea>-->
            <textarea id="editor" class="tinyMCE form-control hidden" id="editor-platform" tabindex="1" name="note_body" style="width: 100%;"><?php
                    (new \vendor\markdown\Ciconia\CiconiaInitializer())->Execute();
                    use Ciconia\Extension\Gfm;
                    $ciconia = new \Ciconia\Ciconia();
                    $ciconia->addExtension(new Gfm\FencedCodeBlockExtension());
                    $ciconia->addExtension(new Gfm\TaskListExtension());
                    $ciconia->addExtension(new Gfm\InlineStyleExtension());
                    $ciconia->addExtension(new Gfm\WhiteSpaceExtension());
                    $ciconia->addExtension(new Gfm\TableExtension());
                    $ciconia->addExtension(new Gfm\UrlAutoLinkExtension());
                    echo trim($ciconia->render($body));
//                    echo $body;
                    ?></textarea>
        </div>
    </form>
</div>