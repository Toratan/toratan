<?php
    $title = "Your note's title here ...";
    $body = "Your note's body here ...";
    if($this->edit)
    {
        $title = $this->values['note_title'];
        $body = $this->values['note_body'];
        $note_id = $this->values['note_id'];
    }
    $profile =\core\db\models\profile::getInstance();
    if(!($eo = $profile->getSetting("/rte/options/ace")) || !($eo instanceof \modules\opsModule\models\aceEditorOptions)) {
        $eo = new \modules\opsModule\models\aceEditorOptions;
        $profile->setSetting("/rte/options/ace", $eo);
    }
?>
<style type="text/css" media="screen">
    #editor-container {top:0; left:0;}
    #editor-parent {width: 100%; margin-top: 10px; }
    #editor { margin-top: 10px; border: 4px solid #eee;}
</style>
<script>
        $(document).ready(function() {
            window.editor = ace.edit("editor");
            /**
             * Setting area
             */
            window.editor.setTheme('<?php echo $eo->theme ?>');
            editor.renderer.setShowGutter(<?php echo boolval($eo->should_show_line_no) ?>);
            window.editor.getSession().setTabSize(<?php echo intval($eo->tab_size) ?>);
            window.editor.setHighlightActiveLine(<?php echo boolval($eo->should_highlight_line) ?>);
            window.editor.getSession().setUseWrapMode(<?php echo boolval($eo->should_warp) ?>);
            document.getElementById('editor').style.fontSize = <?php echo intval($eo->font_size) ?>+'px';           
            /**
             * END OF Setting area
             */
            window.editor.getSession().setMode("ace/mode/markdown");
            window.editor.commands.addCommand({
                name: 'save',
                bindKey: {win: 'Ctrl-S',  mac: 'Command-S'},
                exec: save
            });
            window.editor.navigateFileEnd();
            window.editor.getSession().setUseWrapMode(true);
            $(window).resize(function() {
                $("div#editor").css("height", ($(window).height() - 210) + "px").show();
                window.editor.resize();
            });
            $(window).resize();
            $(window).bind("beforeunload",function() {
                if(anything_changed())
                    return "Changes are not saved!";
            });
            $("a#switch-editor").click(function(e) {
                e.preventDefault();
                var $this = $(this);
<?php if($this->edit) : ?>
                window.open_yesnoModal(
                        "<b>Switching between editors can cause incompatibility issues, and can cause note's pure text seem agly, and might make note development harder.<br /> Are you sure do you want to change the editor?</b>", 
                        function() {
<?php endif; ?>
                            var href = String($this.attr('href')).substr(1); // remove first `#` char.
                            $("form[name='note']")
                                    .append('<input type="hidden" name="submit-type" value="change-editor" />')
                                    .append('<input type="hidden" name="pid" value="<?php echo $this->pid ?>" />')
                                    .attr('action', href);
                            save(window.editor, undefined, true);
<?php if($this->edit) : ?>
                        }, undefined, false);
<?php endif; ?>
            });
            $("a.note-discard").click(function(e) {
                e.preventDefault();
                var href = $(this).attr('href');
                var yes_func =function() {
                    $(window).unbind("beforeunload");
                    window.location = href;
                };
                if(!anything_changed()) {
                    yes_func();
                    return;
                }
                window.open_yesnoModal("Are you sure to <b>discard</b>?", yes_func, undefined, false);
            });
            window.ajax_start = function(){ window.open_waitModal();};
            window.ajax_stop = function() { window.open_waitModal(true);};
            window.ajax_error = function (event, jqXHR, settings, exception) {
                // extract the body's content of error data text
                var error = jqXHR
                        .responseText
                            .replace(/^[\S\s]*<body[^>]*?>/i, "")
                            .replace(/<\/body[\S\s]*$/i, "");
                window.open_errorModal(error);
            };
            $(window).ajaxStart(window.ajax_start);
            $(window).ajaxStop(window.ajax_stop);
            $(window).ajaxError(window.ajax_error);
            window.getNoteContext = function() {
                return window.editor.getValue();
            };
            window.getNoteTitle = function() {
                return $("#editor-title").val();
            };
        });
        function anything_changed() {
            if("<?php echo  str_replace('"', "&quot;", $title) ?>" !== String($("#editor-title").val()).replace(/"/ig, "&quot;")) return true;
            return <?php echo @$this->is_using_buffer? "true || " : ""  ?>window.editor.session.getUndoManager().isClean() !== true;
        };
        window.saveAPI = function() {
            save(window.editor);
        };
        function save(editor, obj, force_save) {
            $(window).unbind('beforeunload');
            if(typeof(force_save) === "undefined") force_save = false;
<?php if(strtolower($this->request->action->name) != "new") : ?>
            if(!(force_save || anything_changed())) {
                $("a.note-discard").click();
                return;
            }
<?php endif; ?>
            $("form[name='note'] input[name='note_title']").val($("#editor-title").val());
            $("form[name='note'] textarea[name='note_body']").val(editor.getValue());
            $("form[name='note'] input[name='version']").val("ace");
            $("form[name='note']").submit();
        };
        function openOptions() {
            $.ajax({
                type: "get", url: "/editor/options/type/ace",
                success: function(data) {
                    setTimeout(function(data) {
                        window.open_savecloseModal(data, function(){
                            $(data).submit();
                        }, "Options");
                    }, 200, data);
                }
            });
        };
        function openGuides() {
            window.open_dialogModal($("#ace-guide").html());
        };
        function close_tag_sug() {
            $(".close-tag-sug")
                .parents('.tag-sug-container')
                .data('closed', 1)
                .slideUp('fast');
        }
        function open_tag_sug() {
            var $selector = $(".close-tag-sug").parents('.tag-sug-container');
            var is_closed = $selector.data('closed');
            if(typeof(is_closed) === "undefined" || is_closed) {
                $selector.slideDown("fast");
            }
        }
        function tagit_action(_this) {
            close_tag_sug();
        };
        function get_last_tag($this) {
            var val = String($this.text());
            var sval = String(val).lastIndexOf(" ");
            var tagval = String(val.substr(sval + 1, val.length + 1)).replace(/^[\s|\n]+|[\s|\n]+$/g,'');
            if(tagval.length === 0) return "";
            return tagval;
        }
        function tagit(){
            window.open_savecloseModal($("#tagit-container").html(), function(){
                $("#tagit-container .tagit").html($(".modal-body .tagit").unbind('keyup').html());
            });
            setTimeout(function(){ 
                var SearchInput = $('.modal-body .tagit[name="tags"]');
                var strLength= SearchInput.text().trim().length;
                SearchInput.focus();
                SearchInput
                    .keydown(function(e){
                        var code = e.keyCode || e.which;
                        if(code === " ".charCodeAt(0)) // submit at SPACE key
                            setTimeout(function(){ tagit_action(); }, 10);
                        var retval = (code !== 13 && code !== 10); // avoid ENTER key
                        if(!retval) {
                            e.preventDefault();
                            tagit_action($(this));
                        }
                        return retval;
                    })
                    .keyup(function(){
                        var tagval = get_last_tag($(this));
                        $(".modal-body .tag-sug-container").children(".just-use-it-tag-sug").remove();
                        $(".modal-body .tag-sug-container").prepend("<div class='tag-sug-block just-use-it-tag-sug' onclick='tagit_action(this)'><small>Just use </small>`"+tagval+"`</div>");
                        if($(this).data("prev_tag_val") !== tagval && tagval.length) {
                            open_tag_sug();
                        }
                        $(this).data("prev_tag_val", tagval); 
                    });
            },600);
        };
</script>
<!--<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js" type="text/javascript" charset="utf-8"></script>-->
<script src="/access/js/jquery-ui-1.8.12.min.js" type="text/javascript" charset="utf-8"></script>
<script src="/access/js/tag-it/js/tag-it.js" type="text/javascript" charset="utf-8"></script>
<!--<link rel="stylesheet" type="text/css" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/flick/jquery-ui.css">-->
<link href="/access/js/tag-it/css/jquery.tagit.css" rel="stylesheet" type="text/css">
<link href="/access/js/tag-it/css/tagit.ui-zendesk.css" rel="stylesheet" type="text/css">
<style>
    [contentEditable='true']{
        height: auto;
        min-height: 34px;
    }
    .ui-state-default,
    .ui-widget-content .ui-state-default,
    .ui-widget-header .ui-state-default{
        background: transparent;
    }
    .tag{
        border:1px solid #DDD;
        background-color: red;
        width: 100px;
        padding:3px;
        text-align: center;
        float: left;
    }
    .tag-sug-container {
        position: fixed;
        margin-top:5px;
        width: calc(100% - 41px);
        height: auto;
        border: 1px solid #000;
        background-color: #FFF;
        display: none;
    }
    .tagit-label,
    .tag,
    .tag-sug-block{
        border-radius: 3px;
            -webkit-border-radius: 3px;
            -moz-border-radius: 3px;
    }
    .tag-sug-block{
        display: table;
        margin: 10px;
        padding: 10px;
        height: 34px;
        min-width: 50px;
        font-weight: bold;
        border: 1px solid #000;
        word-break: break-all;
    }
    .tag-sug-block:hover{
        background-color: #0088cc;
        color: #fff;
        cursor: pointer;
    }
</style>
<!-- ace editor placeholder -->
<div id="editor-container">
    <div id="editor-parent">
        <ol class="breadcrumb">
            <?php $count = 0; foreach($this->route as $folder) : $active = count($this->route) == ++$count; ?>
                <li <?php echo $active?"class='active'":""?>><?php echo !$active?"<a href='/#!/d/{$folder->folder_id}.folders'>":"", $folder->folder_title, !$active?"</a>":""?></li>
            <?php endforeach;unset($count);?>
        </ol>
        <div class="input-group pull-left" style="margin-top: -10px;">
            <input type="text" name="title"  id="editor-title" class="block input form-control" placeholder="Your note's title" value="<?php echo str_replace('"', "&quot;", $title) ?>" autofocus="" required=""/>
            <span class="input-group-btn">
                <button onclick="save(window.editor);" type="button" class="btn btn-default" style="border-bottom-left-radius: 0;border-top-left-radius: 0;" tabindex="-1" title="Save">
                    <span class="glyphicon glyphicon-hdd"></span> Save
                </button>
                <a href="<?php echo $this->edit && $note_id ? "/view/note/$note_id" : "/#!/d/{$this->pid}.notes" ?>" title="Discard" class="note-discard btn btn-warning" tabindex="-1" style="margin-left:10px;">
                    <span class="glyphicon glyphicon-trash"></span> Discard
                </a>
                <a class="btn btn-success" onclick='tagit();return false;' tabindex="-1" style="margin-left:10px;" title="Tag this note">
                    <span class="glyphicon glyphicon-tags"></span> Tagit
                </a>
                <script>
                    $(document).ready(function(){
                        console.warn("DELETE ME");
                        $(".btn-success").click();
                    });
                </script>
            </span>
            <div class="pull-right">
                <div class="input-group inline">
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" tabindex="-1">
                          <span class="glyphicon glyphicon-cog"></span>  <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu pull-right" role="menu">
                            <li><a href="#" onclick="openGuides();"><span class="glyphicon glyphicon-road"></span> Guide Lines</a></li>
                            <li><a href='#' onclick="openOptions();"><span class="glyphicon glyphicon-th-list"></span> Editor's options</a></li>
                            <li class="divider"></li>
                            <li title="Change to classic editor">
                                <a href="#/editor/change/to/classic?continue=<?php echo urlencode("/".$this->request->action->name."/note/".($this->edit ? "$note_id?": "?pid=$this->pid").zinux\kernel\security\security::__get_uri_hash_string(array("note", $this->edit ? $note_id: $this->pid, session_id(), \core\db\models\user::GetInstance()->user_id))); ?>" id="switch-editor">
                                    <span class="glyphicon glyphicon-credit-card"></span> Classic editor
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
        <div id="editor" style="display: none;"><?php echo htmlspecialchars($body) ?></div>
    </div>
</div>
<script src="/access/rte/ace/src-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
<form action="/<?php echo $this->request->action->name ?>/note/<?php echo $this->edit ? "$note_id?": "?pid=$this->pid"?><?php echo zinux\kernel\security\security::__get_uri_hash_string(array("note", $this->edit ? $note_id: $this->pid, session_id(), \core\db\models\user::GetInstance()->user_id)); ?>" method="POST" name='note' style="display: none;">
    <input type="hidden" name="version" value="ace" />
    <div id="tagit-container" style="display: none">
        <label>Tag this note (Separate with SPACE):</label>
        <div class="text-danger error-overflow" style='font-weight: bold;margin-bottom: 10px;display: none'>
            <span class='glyphicon glyphicon-warning-sign'></span> Tag's length cannot be more than 50 charactor!
        </div>
        <script type="text/javascript">
            $(document).ready(function() {
                $("#myTags").tagit();
            });
        </script>

        <ul id="myTags">
            <!-- Existing list items will be pre-added to the tags -->
            <li>Tag1</li>
            <li>Tag2</li>
        </ul>
        <div class="tag-sug-container">
            <a href='#' style='position: absolute;bottom: 10px;right: 10px;display: none' class="close-tag-sug block" onclick="close_tag_sug(); return false;">Close</a>
        </div>
    </div>
    <?php if($this->edit) : ?>
        <input type="hidden" name="note_id" value="<?php echo $note_id ?>" />
    <?php endif; ?>
    <input type="text" name="note_title" maxlength="250" value="<?php echo $title ?>" required="required"/><br />
    <textarea rows="10" cols="80" name="note_body"><?php echo $body ?></textarea>
    <input type="submit" value="Create" />
</form>
<script>
    $(document).ready(function() {
        var meta = [
           ["Save", "Ctrl + S", "CMD + S"], 
           ["Change to upper-case", "Ctrl + U", "Ctrl + U"], 
           ["Change to lower-case", "Ctrl + Shift + U", "Ctrl + Shift + U"],
           ["Copy lines down", "Alt + Shift + <span class='glyphicon glyphicon-arrow-down'></span>", "CMD + Option + <span class='glyphicon glyphicon-arrow-down'></span>"],
           ["Copy lines up", "Alt + Shift + <span class='glyphicon glyphicon-arrow-up'></span>", "CMD + Option + <span class='glyphicon glyphicon-arrow-up'></span>"],
           ["Duplicate selection", "Ctrl + Shift + D", "CMD + Shift + D"],
           ["Find", "Ctrl + F", "CMD + F"],
           ["Find next", "Ctrl + K", "CMD + G"],
           ["Find previous", "Ctrl + Shift + K", "CMD + Shift + K"],
           ["Fold selection", "Alt + L | Ctrl + F1", "CMD + Option + L | CMD + F1"],
           ["Go to end", "Ctrl + End", "CMD + End | CMD + <span class='glyphicon glyphicon-arrow-down'></span>"],
           ["Go to line", "Ctrl + L", "CMD + L"],
           ["Go to line start", "Home", "Home"],
           ["Go to line end", "End", "End"],
           ["Go to matching bracket", "Ctrl + P", ""],
           ["Go to start", "Ctrl + Home", "CMD + Home"],
           ["Move lines down", "Alt + <span class='glyphicon glyphicon-arrow-down'></span>", "Option + <span class='glyphicon glyphicon-arrow-down'></span>"],
           ["Move lines up", "Alt + <span class='glyphicon glyphicon-arrow-up'></span>", "Option + <span class='glyphicon glyphicon-arrow-up'></span>"],
           ["Remove line", "Ctrl + D", "CMD + D"],
           ["Remove to line start", "Alt + Backspace", "CMD + Backspace"],
           ["Remove to line end", "Alt + Delete", "Ctrl + K"],
           ["Remove word left", "Ctrl + Backspace", "Option + Backspace"],
           ["Remove word right", "Ctrl + Delete", "Option + Delete"],
           ["Scroll line down", "Ctrl + <span class='glyphicon glyphicon-arrow-down'></span>", "CMD + <span class='glyphicon glyphicon-arrow-down'></span>"],
           ["Scroll line up", "Ctrl + <span class='glyphicon glyphicon-arrow-up'></span>", ""],
           ["Select down", "Shift + Down", "Shift + Down"],
           ["Select left", "Shift + Left", "Shift + Left"],
           ["Select line end", "Shift + End", "Shift + End"],
           ["Select line start", "Shift + Home", "Shift + Home"],
           ["Select page down", "Shift + PageDown", "Shift + PageDown"],
           ["Select page up", "Shift + PageUp", "Shift + PageUp"],
           ["Select right", "Shift + Right", "Shift + Right"],
           ["Select to end", "Ctrl + Shift + End", "CMD + Shift + Down"],
           ["Select to line end", "Alt + Shift + Right", "CMD + Shift + Right"],
           ["Select to line start", "Alt + Shift + Left", "CMD + Shift + Left"],
           ["Select to matching bracket", "Ctrl + Shift + P", ""],
           ["Select to start", "Ctrl + Shift + Home", "CMD + Shift + Up"],
           ["Select up", "Shift + Up", "Shift + Up"],
           ["Select word left", "Ctrl + Shift + Left", "Option + Shift + Left"],
           ["Select word right", "Ctrl + Shift + Right", "Option + Shift + Right"], 
           ["Toggle comment", "Ctrl + /", "CMD + /"],
        ];
        meta.forEach(function(shortcut) {
            var row =("<tr><td>"+shortcut[0]+"</td><td>"+shortcut[1]+"</td><td>"+
                    String(shortcut[2]).replace(/(CMD)(\s*\+)/ig, '&#8984;$2')+"</td></tr>");
            $(".ace-guide-panels table.table.shortcut-table tbody").append(row);
        });
    });
</script>
<div class="hide" id="ace-guide">
    <div class="panel-group accordion ace-guide-panels">
      <div class="panel panel-default">
        <div class="panel-heading">
          <h4 class="panel-title">
            <a data-toggle="collapse" data-parent=".accordion" data-target=".mark-down-hint" href="#" class="collapsed">
              Markdown Syntax
            </a>
          </h4>
        </div>
          <div class="mark-down-hint panel-collapse collapse in">
          <div class="panel-body text-justify">
              We are using <a href="http://ciconia.kzykhys.com/" target="__blank">Ciconia <span class="glyphicon glyphicon-share-alt small"></span></a> markdown parser to parse markdown texts, you can see full supported markdown syntax from <a href="http://ciconia.kzykhys.com/syntax.html" target="__blank">here <span class="glyphicon glyphicon-share-alt small"></span></a>.
          </div>
        </div>
      </div>
      <div class="panel panel-default">
        <div class="panel-heading">
          <h4 class="panel-title">
            <a data-toggle="collapse" data-parent=".accordion" data-target=".editor-shortcuts" href="#" class="collapsed">
              Editor's Shortcuts
            </a>
          </h4>
        </div>
          <div class="editor-shortcuts panel-collapse collapse">
          <div class="panel-body">
              <table class="table table-striped shortcut-table">
                  <thead>
                      <tr>
                          <th>Action</th>
                          <th>PC (Windows/Linux)</th>
                          <th>&#8984; Mac</th>
                      </tr>
                  </thead>
                  <tbody></tbody>
              </table>
          </div>
        </div>
      </div>
    </div>
</div>