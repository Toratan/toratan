<?php
    $writer = \core\db\models\user::find($this->instance->owner_id);
    $n = $this->instance;
    $this->is_archive = $n->is_archive;
    $this->is_trash = $n->is_trash;
    $this->layout->AddMeta("description", $n->note_title);
    $this->layout->addTitle($n->note_title);
    $author_link = "/profile/{$writer->user_id}";
    $cURL = $this->request->getURI();
    $is_owner = (\core\db\models\user::IsSignedin()  && $writer->user_id == \core\db\models\user::GetInstance()->user_id);
    $get_options_links = function(\core\db\models\note $note, $type, $cURL) {
        $uri = '';
        switch(strtolower($type)) {
            case "delete":
                $uri =
                    "/delete/".
                    $note->WhoAmI()."/".$note->{"{$note->WhoAmI()}_id"}.
                    "/trash/".($note->is_trash ? \core\db\models\item::DELETE_PERIOD: core\db\models\item::DELETE_PUT_TARSH).
                    "?".zinux\kernel\security\security::GetHashString(array($note->WhoAmI(), $note->{"{$note->WhoAmI()}_id"}, session_id(), \core\db\models\user::GetInstance()->user_id));
                    break;
            case "restore":
                $uri =
                    "/delete/".
                    $note->WhoAmI()."/".$note->{"{$note->WhoAmI()}_id"}.
                    "/trash/".(\core\db\models\item::DELETE_RESTORE).
                    "?".zinux\kernel\security\security::GetHashString(array($note->WhoAmI(), $note->{"{$note->WhoAmI()}_id"}, session_id(), \core\db\models\user::GetInstance()->user_id));
                    break;
            case "edit":
                $uri = 
                    "/edit/".
                    $note->WhoAmI()."/".$note->{"{$note->WhoAmI()}_id"}.
                    "?".\zinux\kernel\security\security::GetHashString(array($note->WhoAmI(), $note->{"{$note->WhoAmI()}_id"}, session_id(), \core\db\models\user::GetInstance()->user_id));
                    break;
            case "archive":
                $uri = 
                    "/archive/".
                    $note->WhoAmI()."/".$note->{"{$note->WhoAmI()}_id"}.
                    "/archive/".($this->is_archive ? 0 : 1).
                    "?".\zinux\kernel\security\security::GetHashString(array($note->WhoAmI(), $note->{"{$note->WhoAmI()}_id"}, session_id(), \core\db\models\user::GetInstance()->user_id));
                    break;
            case "share":
                $uri = 
                    "/share/".
                    $note->WhoAmI()."/".$note->{"{$note->WhoAmI()}_id"}.
                    "/share/".($note->is_public ? 0 : 1).
                    "?".\zinux\kernel\security\security::GetHashString(array($note->WhoAmI(), $note->{"{$note->WhoAmI()}_id"}, session_id(), \core\db\models\user::GetInstance()->user_id));
                    break;
            default: throw new \zinux\kernel\exceptions\invalidArgumentException("Undefined type `$type`.");
        }
        return $uri = "$uri&continue=$cURL";
    };
?>
<script type="text/javascript">
    (function(){
        window.ajax_start = function(){ window.open_waitModal();};
        window.ajax_stop = function() { window.open_waitModal(true);};
        window.ajax_error = function (event, jqXHR, settings, exception) {
            // extract the body's content of error data text
            var error = jqXHR
                    .responseText
                        .replace(/^[\S\s]*<body[^>]*?>/i, "")
                        .replace(/<\/body[\S\s]*$/i, "");
            window.open_errorModal(error);
        };
        $(window).ajaxStart(window.ajax_start);
        $(window).ajaxStop(window.ajax_stop);
        $(window).ajaxError(window.ajax_error);
    })(jQuery);
    $(document).ready(function(){
        prettyPrint();
        $("#owner-options [role='menu'] a.delete-permanent").click(function(e) {
            e.preventDefault();
            // for fail-safe
            var href = String($(this).attr('href')).split("#!")[1];
            window.open_yesnoModal("Are you sure do you want to delete this note <b>permanently</b>?", function(){
                window.location = href;
            }, undefined, false);
        });
        $('abbr.timeago').each(function(){
            var sTime = $(this).find('time').attr("datetime");
            var format = 'ddd, DD MMM YYYY HH:mm:ss ZZ';
            var time = moment(sTime, format).format("lll");
            var time_str = (moment(sTime, format).fromNow("lll")) + " ago";
            $(this)
                .attr('title', 'Updated at : ' + time)
                .children('time')
                .attr('title', $(this).attr('title'))
                .addClass(".time-inited")
                .html(time_str);
        });
    });
</script>
<ol class="breadcrumb">
    <?php $count = 0; foreach($this->route as $folder) : $active = count($this->route) == ++$count; ?>
        <li <?php echo $active?"class='active'":""?>><?php echo "<a href='/#!/d/{$folder->folder_id}.".(!$active?"folders":"notes")."'>", $folder->folder_title, "</a>" ?></li>
    <?php endforeach;unset($count);?>
</ol>
<style>
    table#title {margin:0; margin-top: -10px; margin-bottom: 5px;}
    table#title tr td{border: 0;padding: 0}
    topic-meta {font-size: 80%;line-height: 1.42857143;color: #999;}
    #note-body {padding: 10px; text-align: justify}
</style>
<table class="table table-responsive " id="title">
    <tbody>
        <tr>
            <?php list($avatar, $def_avatar) = \core\ui\html\avatar::get_avatar_link($writer->user_id); ?>
            <td rowspan="2" style="width: 80px;height: 80px;">
                <a href='<?php echo $author_link ?>' rel='author' target='__blank'>
                    <img src="<?php echo $avatar ?>" onerror="this.src='<?php echo $def_avatar ?>'" class="image img-responsive img-thumbnail" style="width: 90%"/>
                </a>
            </td>
            <td colspan="2" class='h2 text-justify' style='line-height: initial;'>
                <?php echo $n->note_title ?>
            </td>
        </tr>
        <tr>
            <td style='padding-top: 5px;' class='text-justify'>
                <topic-meta>
                    &mdash;&mdash;
                    Written by
                    <a href='<?php echo $author_link ?>' rel='author' target='__blank'>
                        <?php echo $writer->get_RealName_or_Username() ?>
                    </a>
                    &angmsd;
                    <?php $dt = $n->updated_at ?>
                    <abbr title="<?php echo $dt; ?>" class="initialism timeago" style='cursor: pointer!important'>
                        <time datetime="<?php echo $dt; ?>" >
                            <?php echo $dt; ?>
                        </time>
                    </abbr>
                    <?php unset($dt); ?>
                </topic-meta >
            </td>
            <td class="pull-right">
            <?php if($is_owner) : ?>
                <div class="pull-right" id='owner-options'>
                    <div class="input-group inline" >
                        <div class="btn-group">
                            <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" tabindex="-1" >
                                <span class="glyphicon glyphicon-cog"></span> <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu pull-right" role="menu">
                                <li>
                                    <a href="<?php echo $get_options_links($n, 'edit', $cURL) ?>" style="color:#111100">
                                        <span class='glyphicon glyphicon-edit'></span> Edit
                                    </a>
                                </li>
                                <?php if($this->is_trash): ?>
                                <li class='divider'></li>
                                <li>
                                    <a href="<?php echo $get_options_links($n, 'restore', $cURL) ?>" style="">
                                        <span class='glyphicon glyphicon-cloud-upload'></span> Restore
                                    </a>
                                </li>
                                <?php else: ?>
                                <li class='divider'></li>
                                <li>
                                    <a href="<?php echo $get_options_links($n, 'share', $cURL) ?>" style="">
                                        <span class='glyphicon glyphicon-share-alt'></span> <?php echo $n->is_public?"Un-":""?>Share
                                    </a>
                                </li>
                                <li>
                                    <a href="<?php echo $get_options_links($n, 'archive', $cURL) ?>" style="">
                                        <span class='glyphicon glyphicon-save'></span> <?php echo $this->is_archive?"Un-":""?>Archive
                                    </a>
                                </li>
                                <?php endif; ?>
                                <li class='divider'></li>
                                <li>
                                    <a href="<?php echo $this->is_trash ? "#!": "" /* we add # to delete permanent op. for fail-safe and only launch if a notice dialog pop-out by JS*/,
                                            $get_options_links($n, 'delete', $cURL); ?>" class='<?php echo $this->is_trash?"delete-permanent":""?>' style='color:#777'>
                                        <span class='glyphicon glyphicon-trash'></span> <?php echo $this->is_trash?"Delete permanent":"Put to trash" ?>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            <?php endif; ?>
            </td>
        </tr>
    </tbody>
</table>
<hr style='margin: 0'/>
<div id="note-body" style="width: 100%">
<?php
    (new \vendor\markdown\Ciconia\CiconiaInitializer())->Execute();
    use Ciconia\Extension\Gfm;
    $ciconia = new \Ciconia\Ciconia();
    $ciconia->addExtension(new Gfm\FencedCodeBlockExtension());
    $ciconia->addExtension(new Gfm\TaskListExtension());
    $ciconia->addExtension(new Gfm\InlineStyleExtension());
    $ciconia->addExtension(new Gfm\WhiteSpaceExtension());
    $ciconia->addExtension(new Gfm\TableExtension());
    $ciconia->addExtension(new Gfm\UrlAutoLinkExtension());
    echo $ciconia->render($n->note_body);
?>
</div>
<script src="/access/js/moment.min.js"></script>
<link rel="stylesheet" href='/access/google-code-prettify/tomorrow-night.theme.min.css' />
<script type="text/javascript" src="/access/google-code-prettify/prettify.js"></script>
<?php unset($get_options_links); ?>
<?php new \core\ui\html\dialogs(); ?>